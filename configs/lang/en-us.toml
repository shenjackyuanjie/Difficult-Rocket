language = "English"
language_set_to = "Language set to: English"
language_available = "Available languages list: {}"

[main]
env.version.python = "Python version: {}"
env.version.DR = "Difficult_Rocket version: {}"
env.version.DR_rs = "Difficult_Rocket_rs version: {}"
env.version.pyglet = "pyglet version: {}"
env.version.pyglet_rs = "pyglet_rs version: {}"
version.now_on = "Difficult Rocket is running on Python Vision"
version.need3p = "Difficult Rocket depends on Python vision 3.0+"
version.best38p = "Difficult Rocket is writen in Python {write_py_v}, and now is running on Python {py_v} may cause BUG"
lang.language = "English (EN-US)"
logger.language = "Logging language is: "
logger.created = "Log handler created"
logger.mkdir = "logs/ folder not found, now created"
logger.main_done = "Main log handler created "
logger.logfile_name = "Log file name : "
logger.logfile_level = "Log file record level : "
logger.logfile_fmt = "Log file record format : "
logger.logfile_datefmt = "Log file date format : "
game_start.at = "Game MainThread start at: {}"
mod.find.start = "Checking Mod: {}"
mod.find.faild.no_spec = "importlib can't find spec"
mod.find.faild.no_mod_folder = "Can't find mod folder"
mod.find.done = "All Mod checked"
mod.load.start = "Loading Mod: {}"
mod.load.info = "mod id: {} version: {}"
mod.load.faild.info = "Mod load failed: {} error info: {}"
mod.load.faild.no_mod_class = "Can't find Mod class"
mod.load.done = "All Mod loaded"

[client]
setup.start = "Client start loading"
setup.use_time = "Client loading has used: {} second"
setup.use_time_ns = "Client loading has used: {} nano second"
config.save.start = "Saving config……"
config.save.done = "Config saved"

[window]
setup.start = "Window start loading"
setup.use_time = "Window loading has used: {} second"
setup.use_time_ns = "Window loading has used: {} nano second"
os.pid_is = "Window's PID: {} PPID: {}"
button.been_press = "Button pressed, the current state of the button is: "
mouse.press = "mouse was click at {} button is: {}"
mouse.release = "mouse release at {} button is: {}"
mouse.RIGHT = "right button"
mouse.LEFT = "left button"
mouse.MIDDLE = "middle button"
key.press = "key {} | {} been press"
key.release = "key {} | {} been release"
text.input = "input text \"{}\""
text.new_line = "new line"
text.motion = "text move {}"
text.motion_select = "text select {}"
command.text = "input command: {}"
message.text = "input message: {}"
libs.local = "using local pyglet, version: {}"
libs.outer = "using global pyglet, version: {}\n(may cause bug)"
fonts.found = "found fonts in font lib: {}"
fonts.load = "loading fonts: {}"
game.stop_get = "Received closing commands from {}, game closing"
game.stop = "game closing, saving data……"
game.end = "game closed"

[server]
setup.start = "Server start loading"
setup.use_time = "Server loading has used: {} second"
os.pid_is = "Server PID: {} PPID: {}"

[game]
input = "console"
command = "in game commands"
window = "window"
require_DR_rs = "require DR_rs module"

[client.sr1_render]
setup.start = "SR1 Renderer start loading"
setup.use_time = "SR1 Renderer loading has used: {} second"
xml.loading = "Loading XML file: {}"
xml.load_done = "XML file loaded"
xml.load_time = "XML file loading has used: {} second"
ship.load = "Loading ship: {}"
ship.load_time = "Ship loading has used: {} second"
ship.info = "Ship info:\n- Parts: {}\n- Weight: {}"
ship.render.done = "Ship render done"
